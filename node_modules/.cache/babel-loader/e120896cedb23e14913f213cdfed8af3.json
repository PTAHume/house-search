{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documents\\\\GitHub\\\\React\\\\my-app\\\\src\\\\main-page\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./main-page.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//useEffect - create side effect when stat of component changes\n//useMemo - cache'ing\n\n/*\nexport default function App() {\n  const [allHouses, setAllHouses] = useState([]);\n\n  useEffect(() => {\n    const fetchHouses = async () => {\n      const resp = await fetch(\"../../public/houses.json\");\n      const houses = await resp.json();\n      setAllHouses(houses);\n    };\n    fetchHouses();\n  }, []);\n\n  const featureHouses = useMemo(() => {\n    if (allHouses.length) {\n      const randomIndex = Math.floor(Math.random() * allHouses.length);\n      return allHouses[randomIndex];\n    }\n  }, [allHouses]);\n*/\n\n/*\n                  <Router>\nalways rendered  ->    <h1>Hi there</h1>\n                    <Switch>\nwww.me.com/about ->    <Route exact path=\"/about\"> exact prevent partial match\n                      <About></About>\n                      </Route>\nwww.me.com ->           <Route path=\"/\">\n                        <FeaturedHouse></FeaturedHouse>\n                      </Route>\n                    </Switch>\n                  </Router>\n*/\n\n/*\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header subtitle=\"Proving houses all over the world\" />\n        <HouseFilter allHouses={allHouses} />\n        <Routes>\n          <Route path=\"/searchresults/:country\">\n            <SearchResults allHouses={allHouses}></SearchResults>\n          </Route>\n          <Route path=\"/\">\n            <FeaturedHouse house={featureHouses}></FeaturedHouse>\n          </Route>\n        </Routes>\n      </div>\n    </Router>\n  );\n}*/\nconst App = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    console.log(\"foo\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","App","count","setCount","console","log"],"sources":["C:/Users/patri/OneDrive/Documents/GitHub/React/my-app/src/main-page/index.tsx"],"sourcesContent":["import { useEffect, useState, useMemo } from \"react\";\nimport \"./main-page.css\";\nimport Header from \"./header\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport FeaturedHouse from \"./featured-house\";\nimport HouseFilter from \"./filter-house\";\nimport SearchResults from \"../search-results/search-results\";\n//useEffect - create side effect when stat of component changes\n//useMemo - cache'ing\n/*\nexport default function App() {\n  const [allHouses, setAllHouses] = useState([]);\n\n  useEffect(() => {\n    const fetchHouses = async () => {\n      const resp = await fetch(\"../../public/houses.json\");\n      const houses = await resp.json();\n      setAllHouses(houses);\n    };\n    fetchHouses();\n  }, []);\n\n  const featureHouses = useMemo(() => {\n    if (allHouses.length) {\n      const randomIndex = Math.floor(Math.random() * allHouses.length);\n      return allHouses[randomIndex];\n    }\n  }, [allHouses]);\n*/\n  /*\n                    <Router>\nalways rendered  ->    <h1>Hi there</h1>\n                      <Switch>\nwww.me.com/about ->    <Route exact path=\"/about\"> exact prevent partial match\n                        <About></About>\n                        </Route>\nwww.me.com ->           <Route path=\"/\">\n                          <FeaturedHouse></FeaturedHouse>\n                        </Route>\n                      </Switch>\n                    </Router>\n*/\n/*\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header subtitle=\"Proving houses all over the world\" />\n        <HouseFilter allHouses={allHouses} />\n        <Routes>\n          <Route path=\"/searchresults/:country\">\n            <SearchResults allHouses={allHouses}></SearchResults>\n          </Route>\n          <Route path=\"/\">\n            <FeaturedHouse house={featureHouses}></FeaturedHouse>\n          </Route>\n        </Routes>\n      </div>\n    </Router>\n  );\n}*/\n\nconst App = () => {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    console.log(\"foo\");\n  }, []);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n};\nexport default App;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAA6C,OAA7C;AACA,OAAO,iBAAP;;;AAMA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;EACAD,SAAS,CAAC,MAAM;IACdK,OAAO,CAACC,GAAR,CAAY,KAAZ;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAA,wBACE;MAAA,2BAAgBH,KAAhB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAZD;;GAAMD,G;;KAAAA,G;AAaN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}